service: ton

frameworkVersion: '2'

custom:
  gitDescription: https://github.com/Ramos03/aws_lambda_dynamodb - main

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:PutItem
      - dynamodb:GetItem
      - dynamodb:UpdateItem
    Resource: arn:aws:dynamodb:us-east-1:135034397830:table/*

functions:
  cadastrarUsuario:
    handler: handler.cadastrarUsuario
    events:
      - http:
          path: usuarios
          method: post

  visualizarUsuarios:
    handler: handler.visualizarUsuarios
    events:
      - http:
          path: usuarios
          method: get

  visualizarUsuario:
    handler: handler.visualizarUsuario
    events:
      - http:
          path: usuarios/{userId}
          method: get

  registrarAcessos:
    handler: handler.registrarAcessos
    events:
      - http:
          path: /
          method: get

  visualizarAcessos:
    handler: handler.visualizarAcessos
    events:
      - http:
          path: acessos
          method: get

resources:
  Resources:
    UsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usuarios
        AttributeDefinitions:
          - AttributeName: us_id
            AttributeType: S
        KeySchema:
          - AttributeName: us_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    AcessosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: acessos
        AttributeDefinitions:
          - AttributeName: acesso_id
            AttributeType: S
        KeySchema:
          - AttributeName: acesso_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
